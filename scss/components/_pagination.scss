.ctrl-pagination {
  position: relative;
  margin-bottom: 10px;
  background-color: var(--box-text-bg-color);
  padding: 2%;
  color: #2B2D63;
  border-radius: 30px;
  padding-bottom: 12px;

  @include respond-to('medium') {
    padding-inline: 60px;
    padding-block: 32px 20px;
  }

  .label_current {
    display: none;
  }

  .layers-wrapper {
    width: 100%;
    overflow: hidden;
  }

  ul.layers {
    --current-page: 0;
    list-style: none;
    width: 100%;
    margin: 0;
    padding: 0;
    display: flex;
    transform: translateX(calc(100% * var(--current-page)* -1));
    transition: transform 0.3s ease-out;
  }

  li.layer {
    margin: 0;
    padding: 5px 10px 0 10px;
    flex: 0 0 100%;
  }

  .position {
    color: var(--color-primary-light-400);
    font-weight: 500;
    background-color: var(--grey-light-200);
    padding: 4px 12px;
    border-radius: 12px;
    margin: 0;
    padding-block: 0;
    @include body();

    @include respond-to('medium') {
      position: absolute;
      bottom: -12px;
      left: 50%;
      transform: translateX(-50%);
    }
  }

  ul.pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    list-style: none;
    width: 100%;

    li {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    @include respond-to('medium') {
      position: unset;
      transform: unset;
    }
  }

  .previous,
  .next {
    width: 44px;
    height: 44px;
    float: left;
    cursor: pointer;
    margin-top: 1px;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="80%" height="80%" viewBox="0 0 15.518 19.164"><g id="Grupo_635" data-name="Grupo 635" transform="translate(-2475.477 -1532.212)"><g id="Grupo_634" data-name="Grupo 634"><g id="Grupo_633" data-name="Grupo 633"><path id="Trazado_607" data-name="Trazado 607" d="M2475.477,1532.212l15.518,9.582-15.518,9.581Z" fill="%236956a0"/></g></g></g></svg>');
    background-size: 40%;
    background-position: center;
    background-repeat: no-repeat;
    border-width: 0;

    @include respond-to('medium') {
      position: absolute;
      left: 0;
      top: 50%;
      transform: translateY(-50%);
    }

    &.previous {
      transform: rotateY(180deg);

      @include respond-to('medium') {
        transform: translateY(-50%) rotateY(180deg);
      }
    }

    &.next {
      @include respond-to('medium') {
        left: unset;
        right: 0;
      }
    }

    &:hover {
      filter: grayscale(1);
    }
  }
}
